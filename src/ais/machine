# from seekers_types import *

import numpy as np
import sklearn as sk


# goal: create a unsupervised machine learning algorithms
# watch out: 
# https://www.tutorialspoint.com/artificial_intelligence_with_python/artificial_intelligence_with_python_supervised_learning_classification.htm

# -----+----- Datasets -----+-----

from sklearn.datasets import load_breast_cancer

data = load_breast_cancer()

label_names = data['target_names']
labels = data['target']
feature_names = data['feature_names']
features = data['data']

# -----+----- Selection -----+-----

from sklearn.model_selection import train_test_split

train, test, train_labels, test_labels = train_test_split(features,labels,test_size = 1, random_state = 42)

# -----+----- Prediction -----+-----

from sklearn.naive_bayes import GaussianNB

gnb = GaussianNB()
model = gnb.fit(train, train_labels)

preds = gnb.predict(test)
print(preds)

# -----+----- Accuracy -----+-----

from sklearn.metrics import accuracy_score

print(accuracy_score(test_labels,preds))





















# def decide(own_seekers: list, other_seekers: list, all_seekers: list, 
#    goals: list, other_players: list, own_camp: Camp, camps: list, world: World):
#    """default""" # TODO
#    return own_seekers